Predicted: [14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87043285369873, 14.870450019836426, 14.870450019836426, 14.868011474609375, 14.870450973510742, 14.87044620513916, 14.870447158813477, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870445251464844, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870445251464844, 14.870440483093262, 14.870447158813477, 14.870444297790527, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044620513916, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87043285369873, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870447158813477, 14.870365142822266, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870444297790527, 14.870450019836426, 14.87044620513916, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.87044906616211, 14.870443344116211, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.87043571472168, 14.87044906616211, 14.870448112487793, 14.870448112487793, 14.87044620513916, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.87044620513916, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870442390441895, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870442390441895, 14.87044906616211, 14.870448112487793, 14.870448112487793, 14.870443344116211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044620513916, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870444297790527, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870378494262695, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870384216308594, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870448112487793, 14.87044620513916, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87043285369873, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870390892028809, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870448112487793, 14.870443344116211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870438575744629, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870443344116211, 14.870450019836426, 14.870434761047363, 14.87044906616211, 14.87044906616211, 14.870442390441895, 14.870450019836426, 14.870443344116211, 14.870450973510742, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870402336120605, 14.87044906616211, 14.87043571472168, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870442390441895, 14.870450019836426, 14.870450019836426, 14.870397567749023, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870442390441895, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870439529418945, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87043285369873, 14.870450019836426, 14.870433807373047, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870445251464844, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870166778564453, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870444297790527, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.870440483093262, 14.870450019836426, 14.87044906616211, 14.870444297790527, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.870440483093262, 14.87044906616211, 14.870426177978516, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870444297790527, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870427131652832, 14.870450973510742, 14.870448112487793, 14.87043571472168, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870439529418945, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870443344116211, 14.87043571472168, 14.870442390441895, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870433807373047, 14.870450019836426, 14.870447158813477, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870438575744629, 14.870443344116211, 14.870450973510742, 14.870437622070312, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870437622070312, 14.870433807373047, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870438575744629, 14.870450973510742, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870444297790527, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870448112487793, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87043571472168, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870431900024414, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870423316955566, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870437622070312, 14.87044620513916, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870430946350098, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870444297790527, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870444297790527, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870426177978516, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870445251464844, 14.87044906616211, 14.870447158813477, 14.870420455932617, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870346069335938, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044620513916, 14.870447158813477, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.8704195022583, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870439529418945, 14.870441436767578, 14.870450019836426, 14.870450973510742, 14.870431900024414, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450973510742, 14.870443344116211, 14.870450973510742, 14.870442390441895, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870403289794922, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.870433807373047, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870447158813477, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870441436767578, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870421409606934, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870439529418945, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870437622070312, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87043571472168, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044620513916, 14.870389938354492, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870439529418945, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870441436767578, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870443344116211, 14.870445251464844, 14.870450019836426, 14.870444297790527, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870441436767578, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870220184326172, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870444297790527, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.870447158813477, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870426177978516, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.870447158813477, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870445251464844, 14.87043571472168, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870427131652832, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870445251464844, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870448112487793, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.870439529418945, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870440483093262, 14.870448112487793, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870442390441895, 14.870443344116211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870440483093262, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870317459106445, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870439529418945, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870431900024414, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.870424270629883, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870437622070312, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044620513916, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870437622070312, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044620513916, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870399475097656, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870426177978516, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870448112487793, 14.870450973510742, 14.870436668395996, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870434761047363, 14.870436668395996, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870441436767578, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.870441436767578, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870420455932617, 14.870423316955566, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870440483093262, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870441436767578, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.870355606079102, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870444297790527, 14.87044620513916, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870440483093262, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870378494262695, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870447158813477, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870440483093262, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870441436767578, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870443344116211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870433807373047, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870444297790527, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870429039001465, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870427131652832, 14.870448112487793, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870445251464844, 14.87044620513916, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870439529418945, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870367050170898, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870410919189453, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870443344116211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870441436767578, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.870443344116211, 14.870443344116211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870440483093262, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.870444297790527, 14.87044906616211, 14.870357513427734, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870431900024414, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870439529418945, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.870450973510742, 14.870443344116211, 14.870444297790527, 14.87044906616211, 14.870431900024414, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870444297790527, 14.870431900024414, 14.87044906616211, 14.87044906616211, 14.87043571472168, 14.87044906616211, 14.870445251464844, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.870430946350098, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870441436767578, 14.870439529418945, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87043571472168, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870442390441895, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044620513916, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870448112487793, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870447158813477, 14.87044620513916, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.870450019836426, 14.870428085327148, 14.87044906616211, 14.870450019836426, 14.870444297790527, 14.870450019836426, 14.870447158813477, 14.870443344116211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870440483093262, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870441436767578, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870394706726074, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870433807373047, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870438575744629, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870447158813477, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870439529418945, 14.870443344116211, 14.870447158813477, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87043571472168, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870441436767578, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87043571472168, 14.87044906616211, 14.870445251464844, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870426177978516, 14.87044906616211, 14.870413780212402, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870444297790527, 14.87044620513916, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870397567749023, 14.87044906616211, 14.8704252243042, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044620513916, 14.870445251464844, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870442390441895, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870443344116211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870444297790527, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870431900024414, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870438575744629, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870437622070312, 14.870437622070312, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87043571472168, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870438575744629, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870405197143555, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870439529418945, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.870439529418945, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870441436767578, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870441436767578, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870441436767578, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87043571472168, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.870443344116211, 14.870447158813477, 14.870448112487793, 14.870448112487793, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044620513916, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.870437622070312, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87043571472168, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87043571472168, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870437622070312, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87043571472168, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870431900024414, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870443344116211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870439529418945, 14.87044906616211, 14.870447158813477, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870424270629883, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870391845703125, 14.87044906616211, 14.870437622070312, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044620513916, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870443344116211, 14.870448112487793, 14.870340347290039, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87042236328125, 14.870450973510742, 14.870418548583984, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044620513916, 14.87043285369873, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870444297790527, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870438575744629, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044620513916, 14.870438575744629, 14.87044906616211, 14.870418548583984, 14.870450019836426, 14.870448112487793, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.87044620513916, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870447158813477, 14.870450019836426, 14.870440483093262, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870439529418945, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870445251464844, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870439529418945, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870445251464844, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.870448112487793, 14.870448112487793, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870441436767578, 14.87044620513916, 14.87044906616211, 14.870448112487793, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870442390441895, 14.870450973510742, 14.870445251464844, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870389938354492, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.870415687561035, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87042236328125, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870445251464844, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870436668395996, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870443344116211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870444297790527, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870168685913086, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870377540588379, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870440483093262, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87040901184082, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870431900024414, 14.87044620513916, 14.870427131652832, 14.870450973510742, 14.87044906616211, 14.870437622070312, 14.870450019836426, 14.870450019836426, 14.870437622070312, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870401382446289, 14.87044906616211, 14.870448112487793, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044620513916, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870429992675781, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870448112487793, 14.870396614074707, 14.870447158813477, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870444297790527, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870440483093262, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870429992675781, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870441436767578, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870441436767578, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87042236328125, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870444297790527, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870429992675781, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870443344116211, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870444297790527, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870444297790527, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450973510742, 14.870445251464844, 14.870447158813477, 14.870389938354492, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870378494262695, 14.870450019836426, 14.8704252243042, 14.870450019836426, 14.870450973510742, 14.870437622070312, 14.870430946350098, 14.870442390441895, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.869894981384277, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870447158813477, 14.870445251464844, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870448112487793, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870426177978516, 14.870450019836426, 14.870450973510742, 14.870444297790527, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870440483093262, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870438575744629, 14.870450019836426, 14.870444297790527, 14.870441436767578, 14.870450973510742, 14.87044620513916, 14.870441436767578, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87043571472168, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870414733886719, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870447158813477, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.87044620513916, 14.870414733886719, 14.870448112487793, 14.870447158813477, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.87044620513916, 14.87044906616211, 14.870441436767578, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870437622070312, 14.87044906616211, 14.870433807373047, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870440483093262, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870437622070312, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870441436767578, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870434761047363, 14.870450019836426, 14.870438575744629, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870433807373047, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870442390441895, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870444297790527, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870444297790527, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870447158813477, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870434761047363, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.870447158813477, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87043285369873, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870434761047363, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870444297790527, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.87044620513916, 14.870443344116211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870441436767578, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870436668395996, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870320320129395, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870443344116211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044620513916, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870233535766602, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044620513916, 14.870450973510742, 14.87044906616211, 14.870441436767578, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870443344116211, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.870450973510742, 14.87044620513916, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870302200317383, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870439529418945, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870445251464844, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870445251464844, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.870447158813477, 14.870406150817871, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870440483093262, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870426177978516, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870441436767578, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870433807373047, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870383262634277, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.870448112487793, 14.87044906616211, 14.870447158813477, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.870444297790527, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870431900024414, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870418548583984, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870380401611328, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870439529418945, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870444297790527, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87043571472168, 14.870445251464844, 14.870450973510742, 14.870410919189453, 14.870450019836426, 14.870402336120605, 14.87044620513916, 14.870450019836426, 14.870439529418945, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870441436767578, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.870357513427734, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87043571472168, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.870445251464844, 14.870447158813477, 14.870448112487793, 14.870450019836426, 14.870443344116211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870444297790527, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870441436767578, 14.87044906616211, 14.87044906616211, 14.870326042175293, 14.87044906616211, 14.87043571472168, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870444297790527, 14.87044620513916, 14.870450019836426, 14.870431900024414, 14.87044906616211, 14.870439529418945, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87043285369873, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.870403289794922, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870441436767578, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.87043285369873, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870439529418945, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870444297790527, 14.87044906616211, 14.870448112487793, 14.870412826538086, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870442390441895, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870447158813477, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870439529418945, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870400428771973, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044620513916, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870444297790527, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870443344116211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.870412826538086, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870430946350098, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870437622070312, 14.870450019836426, 14.87044620513916, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870444297790527, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870418548583984, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870444297790527, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870429039001465, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870441436767578, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.870442390441895, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870447158813477, 14.870445251464844, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870415687561035, 14.87044906616211, 14.870448112487793, 14.87044620513916, 14.870450973510742, 14.87044906616211, 14.870443344116211, 14.870450973510742, 14.870450019836426, 14.87044620513916, 14.870447158813477, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870439529418945, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870429039001465, 14.870450019836426, 14.870447158813477, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.870445251464844, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870443344116211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870445251464844, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.87044620513916, 14.870421409606934, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870441436767578, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044620513916, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870431900024414, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870441436767578, 14.870450019836426, 14.87044906616211, 14.870440483093262, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870445251464844, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870443344116211, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.870448112487793, 14.870430946350098, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870439529418945, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870444297790527, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.870415687561035, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870443344116211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870448112487793, 14.870444297790527, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87026596069336, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870445251464844, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.8704252243042, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870443344116211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870431900024414, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.870448112487793, 14.870450973510742, 14.870443344116211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870388984680176, 14.870443344116211, 14.870450973510742, 14.870450019836426, 14.870445251464844, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870444297790527, 14.870450019836426, 14.87043571472168, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870434761047363, 14.87044906616211, 14.87044620513916, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.870448112487793, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.870448112487793, 14.87044906616211, 14.870412826538086, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870443344116211, 14.870448112487793, 14.870429992675781, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870444297790527, 14.870447158813477, 14.870441436767578, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870437622070312, 14.870450973510742, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870442390441895, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870440483093262, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870420455932617, 14.870450973510742, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87042236328125, 14.870442390441895, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870429992675781, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87038803100586, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870444297790527, 14.87044906616211, 14.870380401611328, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870439529418945, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870421409606934, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.870433807373047, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870448112487793, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870445251464844, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870420455932617, 14.870450973510742, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870440483093262, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870443344116211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870437622070312, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870447158813477, 14.870439529418945, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870420455932617, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870424270629883, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87036418914795, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870444297790527, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870424270629883, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87026596069336, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870376586914062, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870444297790527, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870430946350098, 14.870447158813477, 14.87044620513916, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870445251464844, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.87044620513916, 14.87044906616211, 14.870437622070312, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870428085327148, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870445251464844, 14.87042236328125, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.870448112487793, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87038803100586, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870444297790527, 14.870448112487793, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870444297790527, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870444297790527, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.870376586914062, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.870444297790527, 14.870448112487793, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870440483093262, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870445251464844, 14.870447158813477, 14.870450019836426, 14.870375633239746, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.870447158813477, 14.87044620513916, 14.870450973510742, 14.870450973510742, 14.870428085327148, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870444297790527, 14.870447158813477, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870440483093262, 14.870443344116211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870441436767578, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450973510742, 14.870448112487793, 14.870450973510742, 14.870444297790527, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870396614074707, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870404243469238, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870441436767578, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870442390441895, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870439529418945, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870402336120605, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87043285369873, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870447158813477, 14.870384216308594, 14.870372772216797, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870443344116211, 14.87044906616211, 14.870448112487793, 14.870448112487793, 14.870442390441895, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870439529418945, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870443344116211, 14.87044906616211, 14.870447158813477, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870439529418945, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870408058166504, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870433807373047, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870444297790527, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870439529418945, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870444297790527, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870444297790527, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.870420455932617, 14.870448112487793, 14.87044620513916, 14.870450973510742, 14.87044906616211, 14.870433807373047, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870442390441895, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870429992675781, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044620513916, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044620513916, 14.87044906616211, 14.870437622070312, 14.87044906616211, 14.870426177978516, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870407104492188, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87043571472168, 14.87044906616211, 14.870444297790527, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870439529418945, 14.870450019836426, 14.87042236328125, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870441436767578, 14.870443344116211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870441436767578, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870445251464844, 14.870450973510742, 14.870439529418945, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870439529418945, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870437622070312, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870414733886719, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870448112487793, 14.87044620513916, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870444297790527, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870437622070312, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870424270629883, 14.870445251464844, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87041187286377, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870440483093262, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870438575744629, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870443344116211, 14.870442390441895, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870442390441895, 14.870439529418945, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870441436767578, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.870445251464844, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.8704252243042, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870441436767578, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870445251464844, 14.870450973510742, 14.870447158813477, 14.870448112487793, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870399475097656, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870426177978516, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870443344116211, 14.87044906616211, 14.870421409606934, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870445251464844, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870441436767578, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870439529418945, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87043571472168, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870444297790527, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870444297790527, 14.87044620513916, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870447158813477, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044620513916, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870433807373047, 14.870450019836426, 14.870450973510742, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87038803100586, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870447158813477, 14.870443344116211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870372772216797, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870436668395996, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870448112487793, 14.87044620513916, 14.870443344116211, 14.870444297790527, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870440483093262, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870445251464844, 14.870416641235352, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870362281799316, 14.87044620513916, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870448112487793, 14.87044906616211, 14.870443344116211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870420455932617, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870426177978516, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870403289794922, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450973510742, 14.87044620513916, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870439529418945, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870439529418945, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870444297790527, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870441436767578, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870429992675781, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870436668395996, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870340347290039, 14.870450973510742, 14.870405197143555, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044620513916, 14.870445251464844, 14.87044906616211, 14.870437622070312, 14.870450019836426, 14.870448112487793, 14.870444297790527, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870440483093262, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87042236328125, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87043285369873, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870441436767578, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.870447158813477, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870442390441895, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870417594909668, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870360374450684, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.870445251464844, 14.870447158813477, 14.870442390441895, 14.870450973510742, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.870424270629883, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870428085327148, 14.870434761047363, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870448112487793, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870438575744629, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870414733886719, 14.87044906616211, 14.870428085327148, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870436668395996, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870414733886719, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870437622070312, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870441436767578, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870441436767578, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.87043571472168, 14.870450973510742, 14.870439529418945, 14.870448112487793, 14.870444297790527, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.87043571472168, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870424270629883, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870413780212402, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870441436767578, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870429992675781, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870441436767578, 14.870444297790527, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87043571472168, 14.870420455932617, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87039566040039, 14.870450019836426, 14.87044906616211, 14.87043571472168, 14.870450019836426, 14.870445251464844, 14.870450973510742, 14.870437622070312, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870437622070312, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87043285369873, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87043285369873, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.870438575744629, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870448112487793, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.870417594909668, 14.870445251464844, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87037467956543, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870447158813477, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.870443344116211, 14.870450973510742, 14.870448112487793, 14.870410919189453, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870426177978516, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870442390441895, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870448112487793, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870441436767578, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.870441436767578, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450973510742, 14.870414733886719, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870420455932617, 14.870450019836426, 14.870447158813477, 14.870442390441895, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.870444297790527, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870439529418945, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870448112487793, 14.870448112487793, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870448112487793, 14.870442390441895, 14.87044906616211, 14.87044620513916, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870437622070312, 14.870443344116211, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870445251464844, 14.870448112487793, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870418548583984, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870442390441895, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870437622070312, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870298385620117, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870441436767578, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870440483093262, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870444297790527, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870433807373047, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87043571472168, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870424270629883, 14.870450019836426, 14.870445251464844, 14.870450973510742, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870441436767578, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870405197143555, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870439529418945, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044620513916, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870441436767578, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87043571472168, 14.870448112487793, 14.870443344116211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870441436767578, 14.870448112487793, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870328903198242, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870426177978516, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870443344116211, 14.870444297790527, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870445251464844, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044620513916, 14.87044620513916, 14.870448112487793, 14.87044906616211, 14.87044620513916, 14.87044620513916, 14.870444297790527, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870441436767578, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870442390441895, 14.870443344116211, 14.870416641235352, 14.870450973510742, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87043571472168, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87043571472168, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870450973510742, 14.870450019836426, 14.87043571472168, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870448112487793, 14.870359420776367, 14.870450019836426, 14.870444297790527, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870441436767578, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870363235473633, 14.87044620513916, 14.870450973510742, 14.870450019836426, 14.870403289794922, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044620513916, 14.870448112487793, 14.870450973510742, 14.870448112487793, 14.870443344116211, 14.870447158813477, 14.87044906616211, 14.870426177978516, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870418548583984, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870414733886719, 14.870448112487793, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870365142822266, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870445251464844, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870410919189453, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87043571472168, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870444297790527, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870439529418945, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870365142822266, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870441436767578, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870441436767578, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870392799377441, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870442390441895, 14.87044620513916, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870433807373047, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870412826538086, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870441436767578, 14.870447158813477, 14.870431900024414, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.8704252243042, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870426177978516, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87030029296875, 14.87044906616211, 14.870439529418945, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044620513916, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870405197143555, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870439529418945, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.870450973510742, 14.870445251464844, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870442390441895, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.870448112487793, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870444297790527, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870444297790527, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870445251464844, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870420455932617, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870443344116211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870441436767578, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870445251464844, 14.870437622070312, 14.870450019836426, 14.87042236328125, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870450973510742, 14.870415687561035, 14.870434761047363, 14.870441436767578, 14.870447158813477, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.870445251464844, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870445251464844, 14.870447158813477, 14.870450019836426, 14.870444297790527, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.870448112487793, 14.870448112487793, 14.870450019836426, 14.870447158813477, 14.870448112487793, 14.870448112487793, 14.87044620513916, 14.870442390441895, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870448112487793, 14.87042236328125, 14.87044620513916, 14.870450973510742, 14.870444297790527, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044620513916, 14.870447158813477, 14.870444297790527, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044620513916, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870444297790527, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870440483093262, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870431900024414, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870444297790527, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870441436767578, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870441436767578, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870450973510742, 14.87044620513916, 14.87044906616211, 14.870439529418945, 14.870450973510742, 14.870429992675781, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870439529418945, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.870448112487793, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870448112487793, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870438575744629, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.8704252243042, 14.870447158813477, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87043571472168, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870444297790527, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870426177978516, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870441436767578, 14.87044906616211, 14.87044906616211, 14.870330810546875, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870447158813477, 14.870416641235352, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870444297790527, 14.870442390441895, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870408058166504, 14.870445251464844, 14.870437622070312, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870448112487793, 14.870450973510742, 14.87044620513916, 14.870436668395996, 14.870447158813477, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870431900024414, 14.870447158813477, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870429992675781, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870440483093262, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870429992675781, 14.870447158813477, 14.87044906616211, 14.870436668395996, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044620513916, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870429992675781, 14.870447158813477, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.870448112487793, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870428085327148, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87043285369873, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044620513916, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870418548583984, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.870441436767578, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870444297790527, 14.870436668395996, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870394706726074, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870433807373047, 14.870445251464844, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870447158813477, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870426177978516, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.870448112487793, 14.87044620513916, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870434761047363, 14.870450019836426, 14.870428085327148, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870412826538086, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044620513916, 14.870447158813477, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87040901184082, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870368957519531, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870428085327148, 14.870450973510742, 14.870450019836426, 14.87044620513916, 14.870447158813477, 14.870380401611328, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.870431900024414, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870447158813477, 14.87044906616211, 14.87042236328125, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870433807373047, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87043571472168, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870445251464844, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870448112487793, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870445251464844, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870433807373047, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870439529418945, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870443344116211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870397567749023, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87043285369873, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870431900024414, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870440483093262, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870433807373047, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870433807373047, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870359420776367, 14.87044906616211, 14.870447158813477, 14.870445251464844, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870429039001465, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870362281799316, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87036418914795, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870382308959961, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870438575744629, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870431900024414, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870444297790527, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870444297790527, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870439529418945, 14.870437622070312, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.870448112487793, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870382308959961, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.870436668395996, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044620513916, 14.87044620513916, 14.870448112487793, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870437622070312, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.870447158813477, 14.87044620513916, 14.87044906616211, 14.87043571472168, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87043571472168, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870420455932617, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870445251464844, 14.870407104492188, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870443344116211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870433807373047, 14.87044906616211, 14.870427131652832, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870305061340332, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870445251464844, 14.87044906616211, 14.87042236328125, 14.87044906616211, 14.870444297790527, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870441436767578, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870448112487793, 14.870450973510742, 14.870439529418945, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870441436767578, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870440483093262, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870441436767578, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870436668395996, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870429039001465, 14.87044906616211, 14.870447158813477, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870444297790527, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870404243469238, 14.870450019836426, 14.870439529418945, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870434761047363, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870439529418945, 14.870450019836426, 14.87044906616211, 14.87043285369873, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870420455932617, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044620513916, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870440483093262, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870437622070312, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870442390441895, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870369911193848, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870378494262695, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87043571472168, 14.870450973510742, 14.870450019836426, 14.870444297790527, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870445251464844, 14.870450973510742, 14.870447158813477, 14.870438575744629, 14.870448112487793, 14.87044620513916, 14.870450019836426, 14.870447158813477, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870431900024414, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870438575744629, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870390892028809, 14.87044906616211, 14.87044620513916, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044620513916, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870444297790527, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870437622070312, 14.87043571472168, 14.870444297790527, 14.870450973510742, 14.870448112487793, 14.870450973510742, 14.870448112487793, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.870441436767578, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870441436767578, 14.870450019836426, 14.87044906616211, 14.870431900024414, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870438575744629, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870445251464844, 14.870444297790527, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870439529418945, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870443344116211, 14.870445251464844, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870443344116211, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870376586914062, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870440483093262, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870434761047363, 14.870445251464844, 14.870379447937012, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870428085327148, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044620513916, 14.870429039001465, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870441436767578, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870445251464844, 14.87044906616211, 14.870445251464844, 14.870441436767578, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870447158813477, 14.87044620513916, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870441436767578, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870441436767578, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870443344116211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.870439529418945, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87038516998291, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870424270629883, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044620513916, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870441436767578, 14.870431900024414, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870412826538086, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.87043571472168, 14.870441436767578, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870381355285645, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870429992675781, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870441436767578, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.870447158813477, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870376586914062, 14.870439529418945, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870382308959961, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.8704252243042, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.870441436767578, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.87044620513916, 14.870442390441895, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870431900024414, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870421409606934, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870442390441895, 14.87044906616211, 14.87044620513916, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87043571472168, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870437622070312, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870448112487793, 14.870445251464844, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870441436767578, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870431900024414, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.870450973510742, 14.870443344116211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870442390441895, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870445251464844, 14.870450973510742, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870440483093262, 14.870447158813477, 14.870448112487793, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870441436767578, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870439529418945, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870437622070312, 14.870440483093262, 14.870447158813477, 14.870450019836426, 14.87044620513916, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870442390441895, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870444297790527, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450973510742, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870442390441895, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870444297790527, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044620513916, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870439529418945, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870450973510742, 14.870439529418945, 14.870445251464844, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.870444297790527, 14.870450019836426, 14.870443344116211, 14.870450973510742, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870439529418945, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044620513916, 14.87044906616211, 14.870443344116211, 14.870441436767578, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870448112487793, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87043571472168, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87043571472168, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870437622070312, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870445251464844, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870443344116211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.870441436767578, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870431900024414, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870426177978516, 14.87044906616211, 14.870447158813477, 14.870448112487793, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870431900024414, 14.870437622070312, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870444297790527, 14.870444297790527, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870426177978516, 14.87043285369873, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044620513916, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870448112487793, 14.87044620513916, 14.870450019836426, 14.870441436767578, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870424270629883, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870434761047363, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870431900024414, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87039566040039, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870441436767578, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870441436767578, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87043571472168, 14.87044906616211, 14.870433807373047, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87040901184082, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870437622070312, 14.870338439941406, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.870450973510742, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870444297790527, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870442390441895, 14.870447158813477, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.870440483093262, 14.870450973510742, 14.870441436767578, 14.870450019836426, 14.870450019836426, 14.870407104492188, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870445251464844, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870444297790527, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870445251464844, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870448112487793, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870373725891113, 14.87044906616211, 14.870450973510742, 14.87037181854248, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870447158813477, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.870447158813477, 14.870447158813477, 14.870447158813477, 14.870438575744629, 14.870450019836426, 14.870450019836426, 14.870439529418945, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870381355285645, 14.870448112487793, 14.870448112487793, 14.87044906616211, 14.87044620513916, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870353698730469, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870447158813477, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870418548583984, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.870439529418945, 14.870450973510742, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870429992675781, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870439529418945, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870441436767578, 14.870443344116211, 14.870450973510742, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044620513916, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870445251464844, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870418548583984, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870448112487793, 14.870450973510742, 14.870437622070312, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870445251464844, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870441436767578, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870440483093262, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870444297790527, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870441436767578, 14.87044906616211, 14.870433807373047, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870430946350098, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.870447158813477, 14.870445251464844, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870440483093262, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870448112487793, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870444297790527, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870438575744629, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870415687561035, 14.870443344116211, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870441436767578, 14.870450973510742, 14.870444297790527, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870438575744629, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870428085327148, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87043285369873, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870431900024414, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870442390441895, 14.870447158813477, 14.87044906616211, 14.870439529418945, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870442390441895, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870429039001465, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.870447158813477, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870426177978516, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870420455932617, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87043285369873, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870357513427734, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870448112487793, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870447158813477, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870429992675781, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870444297790527, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870409965515137, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870444297790527, 14.870450019836426, 14.870440483093262, 14.870447158813477, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87042236328125, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870423316955566, 14.870447158813477, 14.87044620513916, 14.87044620513916, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870444297790527, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870442390441895, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870378494262695, 14.870440483093262, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.870431900024414, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870439529418945, 14.87044906616211, 14.87044906616211, 14.870441436767578, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870441436767578, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870444297790527, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870441436767578, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870441436767578, 14.870450973510742, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870441436767578, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870445251464844, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87002944946289, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870437622070312, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870434761047363, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870439529418945, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870444297790527, 14.87044906616211, 14.870405197143555, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870443344116211, 14.870450019836426, 14.870444297790527, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870439529418945, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870444297790527, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870444297790527, 14.870450019836426, 14.87044906616211, 14.870439529418945, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.870444297790527, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870441436767578, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870437622070312, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870431900024414, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.870447158813477, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870423316955566, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870428085327148, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870416641235352, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870416641235352, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870384216308594, 14.87044906616211, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870447158813477, 14.870450019836426, 14.87044620513916, 14.870441436767578, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870444297790527, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870429039001465, 14.870448112487793, 14.870447158813477, 14.870393753051758, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870448112487793, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870443344116211, 14.870448112487793, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870440483093262, 14.870423316955566, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870445251464844, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.870441436767578, 14.870447158813477, 14.870450019836426, 14.870344161987305, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870445251464844, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.87044620513916, 14.870443344116211, 14.870382308959961, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870445251464844, 14.870441436767578, 14.870447158813477, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87043571472168, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870426177978516, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870431900024414, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870444297790527, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044620513916, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870429992675781, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870439529418945, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.87044620513916, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870397567749023, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870428085327148, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870447158813477, 14.870442390441895, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870437622070312, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870444297790527, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870359420776367, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870439529418945, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870444297790527, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870440483093262, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870444297790527, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870433807373047, 14.870420455932617, 14.870448112487793, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870438575744629, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870441436767578, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870439529418945, 14.870441436767578, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87043571472168, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87032699584961, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870443344116211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870424270629883, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870448112487793, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870440483093262, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870444297790527, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870427131652832, 14.870447158813477, 14.87044906616211, 14.870448112487793, 14.870441436767578, 14.870450973510742, 14.870450019836426, 14.87044620513916, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.870437622070312, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870441436767578, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87043571472168, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870436668395996, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.87044620513916, 14.87044906616211, 14.870448112487793, 14.870448112487793, 14.870434761047363, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870439529418945, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870450973510742, 14.870443344116211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870439529418945, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870424270629883, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870414733886719, 14.87044906616211, 14.870443344116211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870444297790527, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870393753051758, 14.870450019836426, 14.87044906616211, 14.870444297790527, 14.870448112487793, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870441436767578, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87043571472168, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870433807373047, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870406150817871, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870443344116211, 14.870450973510742, 14.87044906616211, 14.870288848876953, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87037181854248, 14.870450019836426, 14.87044906616211, 14.870368957519531, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870406150817871, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870443344116211, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870439529418945, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870444297790527, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.87044620513916, 14.870450019836426, 14.870450973510742, 14.870437622070312, 14.87044906616211, 14.870448112487793, 14.870439529418945, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870441436767578, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870442390441895, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870448112487793, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870448112487793, 14.870433807373047, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870445251464844, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870439529418945, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870444297790527, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870441436767578, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.870408058166504, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870444297790527, 14.870450019836426, 14.870447158813477, 14.870441436767578, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870436668395996, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870444297790527, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450973510742, 14.87043571472168, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870431900024414, 14.870450973510742, 14.870448112487793, 14.870439529418945, 14.87044906616211, 14.870450973510742, 14.870430946350098, 14.870447158813477, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870447158813477, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870426177978516, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870444297790527, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870448112487793, 14.87044620513916, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.870441436767578, 14.870448112487793, 14.87044620513916, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87043571472168, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870433807373047, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870439529418945, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870448112487793, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.870414733886719, 14.870445251464844, 14.870443344116211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870382308959961, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87043285369873, 14.870450019836426, 14.870443344116211, 14.87044620513916, 14.870447158813477, 14.87044906616211, 14.870429992675781, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870440483093262, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870437622070312, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870433807373047, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87043571472168, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870441436767578, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870372772216797, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870448112487793, 14.87044620513916, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870441436767578, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870444297790527, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870445251464844, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870414733886719, 14.87044906616211, 14.87044906616211, 14.87037467956543, 14.87044906616211, 14.870440483093262, 14.870442390441895, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870434761047363, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.870442390441895, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870438575744629, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870443344116211, 14.870444297790527, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870430946350098, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870444297790527, 14.870450973510742, 14.87044620513916, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870296478271484, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.8704252243042, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870405197143555, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870447158813477, 14.870393753051758, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87043285369873, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870431900024414, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870448112487793, 14.870428085327148, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870445251464844, 14.870434761047363, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870444297790527, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870361328125, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870444297790527, 14.870447158813477, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870444297790527, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.870444297790527, 14.87044906616211, 14.870450973510742, 14.870441436767578, 14.870450019836426, 14.87044906616211, 14.870444297790527, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870355606079102, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044620513916, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87043571472168, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870357513427734, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.8704252243042, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870405197143555, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870443344116211, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870444297790527, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870418548583984, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870444297790527, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870444297790527, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870407104492188, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.8704252243042, 14.870447158813477, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870442390441895, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870441436767578, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044620513916, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870441436767578, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870429039001465, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.87044620513916, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870442390441895, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870441436767578, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870448112487793, 14.87044620513916, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870448112487793, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870439529418945, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450973510742, 14.870447158813477, 14.870436668395996, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870443344116211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870439529418945, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870448112487793, 14.870447158813477, 14.870450973510742, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870439529418945, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870439529418945, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870275497436523, 14.870450973510742, 14.87041187286377, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870388984680176, 14.870448112487793, 14.870450019836426, 14.870441436767578, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870445251464844, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870439529418945, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870436668395996, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870405197143555, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870444297790527, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870444297790527, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870379447937012, 14.870450019836426, 14.870407104492188, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870442390441895, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870439529418945, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870445251464844, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870441436767578, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870437622070312, 14.87044620513916, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870441436767578, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044620513916, 14.87044620513916, 14.870445251464844, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87038803100586, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870437622070312, 14.870448112487793, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870444297790527, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870440483093262, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.870439529418945, 14.87044906616211, 14.870450973510742, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870443344116211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870440483093262, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870416641235352, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870444297790527, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870444297790527, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870442390441895, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870389938354492, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870445251464844, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87042236328125, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870445251464844, 14.870441436767578, 14.87044906616211, 14.870450019836426, 14.870434761047363, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870418548583984, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870444297790527, 14.87044906616211, 14.870447158813477, 14.870445251464844, 14.870450973510742, 14.870450019836426, 14.870439529418945, 14.870445251464844, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870437622070312, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870445251464844, 14.87044906616211, 14.870378494262695, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870444297790527, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870439529418945, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87039566040039, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870433807373047, 14.870442390441895, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870443344116211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870440483093262, 14.870450019836426, 14.87044906616211, 14.870440483093262, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870407104492188, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870382308959961, 14.870450019836426, 14.870450019836426, 14.870421409606934, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870437622070312, 14.870444297790527, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870441436767578, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870441436767578, 14.870420455932617, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870441436767578, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870429992675781, 14.870450973510742, 14.870448112487793, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044620513916, 14.87043571472168, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870439529418945, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87043571472168, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870445251464844, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870447158813477, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.870391845703125, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870429992675781, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.870442390441895, 14.870445251464844, 14.870447158813477, 14.870447158813477, 14.870447158813477, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87043571472168, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044620513916, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870444297790527, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870361328125, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.870447158813477, 14.870418548583984, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870448112487793, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87039566040039, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870445251464844, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870433807373047, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044620513916, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87034797668457, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870445251464844, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87043571472168, 14.87044906616211, 14.870450019836426, 14.87043571472168, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870428085327148, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870429992675781, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870439529418945, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.870445251464844, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.870439529418945, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870187759399414, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870448112487793, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87038516998291, 14.870448112487793, 14.870437622070312, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870448112487793, 14.87043571472168, 14.870447158813477, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.870444297790527, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044620513916, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870403289794922, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870436668395996, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870403289794922, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870404243469238, 14.87044906616211, 14.870450019836426, 14.87043571472168, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.870450973510742, 14.870441436767578, 14.870440483093262, 14.870450019836426, 14.870448112487793, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.87043571472168, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.87043571472168, 14.87044906616211, 14.87044906616211, 14.870420455932617, 14.870450019836426, 14.870450973510742, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870447158813477, 14.87044906616211, 14.870440483093262, 14.870450019836426, 14.870363235473633, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870429992675781, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870437622070312, 14.870447158813477, 14.87044906616211, 14.870445251464844, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870426177978516, 14.870450973510742, 14.87044906616211, 14.870443344116211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870436668395996, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870386123657227, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870444297790527, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450973510742, 14.870443344116211, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870437622070312, 14.870444297790527, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044620513916, 14.870447158813477, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870442390441895, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.87043285369873, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870439529418945, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870444297790527, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87043571472168, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870439529418945, 14.870439529418945, 14.87044906616211, 14.870447158813477, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870408058166504, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870433807373047, 14.870441436767578, 14.870447158813477, 14.87044906616211, 14.870441436767578, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.870443344116211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870442390441895, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870439529418945, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.870441436767578, 14.870443344116211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870445251464844, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.870441436767578, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870442390441895, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870187759399414, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870444297790527, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870440483093262, 14.870450019836426, 14.870431900024414, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87039566040039, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870437622070312, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.87044620513916, 14.87042236328125, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870441436767578, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87042236328125, 14.870450019836426, 14.870437622070312, 14.87044906616211, 14.870429992675781, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870439529418945, 14.87044906616211, 14.87044906616211, 14.870441436767578, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870417594909668, 14.870440483093262, 14.87044906616211, 14.87044620513916, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87039852142334, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870439529418945, 14.87044620513916, 14.870444297790527, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870418548583984, 14.870448112487793, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870437622070312, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870378494262695, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870441436767578, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870439529418945, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87040901184082, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870444297790527, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870441436767578, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870444297790527, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87024974822998, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870407104492188, 14.870439529418945, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.870447158813477, 14.870439529418945, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870441436767578, 14.87044620513916, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.870434761047363, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870441436767578, 14.870450019836426, 14.870440483093262, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870382308959961, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870444297790527, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870441436767578, 14.870438575744629, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870404243469238, 14.870445251464844, 14.87044906616211, 14.870443344116211, 14.870428085327148, 14.870445251464844, 14.870445251464844, 14.87044620513916, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.87044620513916, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870443344116211, 14.870450973510742, 14.870441436767578, 14.870448112487793, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870439529418945, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870336532592773, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870444297790527, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.87044620513916, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870414733886719, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870428085327148, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870439529418945, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87043571472168, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870445251464844, 14.870438575744629, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.870450973510742, 14.870437622070312, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870433807373047, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.870450973510742, 14.870450973510742, 14.870447158813477, 14.870416641235352, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87042236328125, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.87043285369873, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870442390441895, 14.870450019836426, 14.87044906616211, 14.870441436767578, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870390892028809, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.870450973510742, 14.870390892028809, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870413780212402, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870444297790527, 14.870447158813477, 14.870443344116211, 14.870450019836426, 14.87042236328125, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870445251464844, 14.870440483093262, 14.870450019836426, 14.870450973510742, 14.870431900024414, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.870428085327148, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870441436767578, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87043571472168, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.870439529418945, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870413780212402, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870442390441895, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870443344116211, 14.870450973510742, 14.870441436767578, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870416641235352, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870441436767578, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870444297790527, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870444297790527, 14.870450019836426, 14.870448112487793, 14.870437622070312, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870441436767578, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870445251464844, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870441436767578, 14.87044620513916, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.870441436767578, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870444297790527, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870445251464844, 14.87044620513916, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044620513916, 14.870440483093262, 14.870437622070312, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870439529418945, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870382308959961, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870439529418945, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87043571472168, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870405197143555, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870444297790527, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870445251464844, 14.870437622070312, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044620513916, 14.870444297790527, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870412826538086, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.87044620513916, 14.870445251464844, 14.870448112487793, 14.870447158813477, 14.870444297790527, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870444297790527, 14.870412826538086, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870386123657227, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870444297790527, 14.870450973510742, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.870443344116211, 14.870450973510742, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870431900024414, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870428085327148, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870420455932617, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870417594909668, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870444297790527, 14.870438575744629, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870440483093262, 14.87044620513916, 14.870450019836426, 14.87042236328125, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870427131652832, 14.870448112487793, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870448112487793, 14.870450019836426, 14.87044620513916, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87043571472168, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870444297790527, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870418548583984, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870404243469238, 14.87044906616211, 14.87044620513916, 14.870448112487793, 14.870448112487793, 14.870445251464844, 14.870447158813477, 14.87044906616211, 14.870406150817871, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870441436767578, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870434761047363, 14.870447158813477, 14.870447158813477, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870442390441895, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870442390441895, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870437622070312, 14.870450019836426, 14.870342254638672, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870440483093262, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044620513916, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870441436767578, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870369911193848, 14.870450973510742, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870431900024414, 14.870440483093262, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870402336120605, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870437622070312, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870433807373047, 14.87043571472168, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.87042236328125, 14.870448112487793, 14.870450019836426, 14.87044620513916, 14.870433807373047, 14.87044906616211, 14.870450019836426, 14.870441436767578, 14.870445251464844, 14.870450019836426, 14.870437622070312, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87043571472168, 14.87044906616211, 14.870450019836426, 14.870434761047363, 14.87044906616211, 14.870382308959961, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870441436767578, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870407104492188, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870436668395996, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870445251464844, 14.870444297790527, 14.870438575744629, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870440483093262, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870439529418945, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870235443115234, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870397567749023, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.870368003845215, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870246887207031, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870439529418945, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870412826538086, 14.87044906616211, 14.87044620513916, 14.870405197143555, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870444297790527, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.87040901184082, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870238304138184, 14.870450019836426, 14.870447158813477, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870445251464844, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870433807373047, 14.870450973510742, 14.870440483093262, 14.870450019836426, 14.870442390441895, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870439529418945, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870433807373047, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.870434761047363, 14.87044620513916, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.8704252243042, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870433807373047, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87043571472168, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870447158813477, 14.870448112487793, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870440483093262, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.870445251464844, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870414733886719, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044620513916, 14.870450973510742, 14.870424270629883, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870439529418945, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870447158813477, 14.870447158813477, 14.870382308959961, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870436668395996, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870441436767578, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870439529418945, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870429992675781, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870437622070312, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044620513916, 14.87043571472168, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.870447158813477, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870437622070312, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870448112487793, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870444297790527, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870412826538086, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870443344116211, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87043571472168, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870448112487793, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870444297790527, 14.870408058166504, 14.87044906616211, 14.870440483093262, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.870444297790527, 14.870447158813477, 14.87044620513916, 14.870450973510742, 14.870445251464844, 14.87044620513916, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870441436767578, 14.870410919189453, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870442390441895, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870439529418945, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870339393615723, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870442390441895, 14.870450019836426, 14.87039566040039, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870444297790527, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870443344116211, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870444297790527, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870444297790527, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870431900024414, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870378494262695, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870429992675781, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870428085327148, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870441436767578, 14.870450019836426, 14.87043571472168, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870441436767578, 14.870443344116211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870433807373047, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870441436767578, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870437622070312, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870430946350098, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870431900024414, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870440483093262, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870410919189453, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87043571472168, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870417594909668, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870439529418945, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870445251464844, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870431900024414, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870443344116211, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870443344116211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870442390441895, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870444297790527, 14.87044906616211, 14.870437622070312, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870444297790527, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870441436767578, 14.870445251464844, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044620513916, 14.87044620513916, 14.87044620513916, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870433807373047, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870440483093262, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870429039001465, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870440483093262, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044620513916, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870437622070312, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870418548583984, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044620513916, 14.870448112487793, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870441436767578, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87043571472168, 14.870450019836426, 14.87044906616211, 14.870437622070312, 14.87044620513916, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87043571472168, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870444297790527, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870447158813477, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.87044620513916, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870431900024414, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870424270629883, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.87044620513916, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.870443344116211, 14.870450973510742, 14.870450019836426, 14.870441436767578, 14.870447158813477, 14.870447158813477, 14.870361328125, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870442390441895, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870447158813477, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870443344116211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870437622070312, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.870409965515137, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.87044620513916, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870439529418945, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87043571472168, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870444297790527, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870441436767578, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870442390441895, 14.87044906616211, 14.870445251464844, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87043571472168, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870437622070312, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870447158813477, 14.870447158813477, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87043285369873, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870413780212402, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870444297790527, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870445251464844, 14.870447158813477, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870439529418945, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870431900024414, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87043285369873, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870437622070312, 14.87044906616211, 14.870448112487793, 14.870439529418945, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.870443344116211, 14.87044906616211, 14.870450973510742, 14.870445251464844, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870438575744629, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870439529418945, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.87043571472168, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87043571472168, 14.87044906616211, 14.870448112487793, 14.87044620513916, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870443344116211, 14.87044620513916, 14.870441436767578, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870448112487793, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870445251464844, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870414733886719, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870430946350098, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870431900024414, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870439529418945, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870409965515137, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870441436767578, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870378494262695, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870444297790527, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870444297790527, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870429992675781, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870319366455078, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870444297790527, 14.87044906616211, 14.870444297790527, 14.870450019836426, 14.870447158813477, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.870397567749023, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870445251464844, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.8704252243042, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870441436767578, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87043571472168, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.870444297790527, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870445251464844, 14.87044906616211, 14.870445251464844, 14.870416641235352, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870440483093262, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870445251464844, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870437622070312, 14.87044906616211, 14.87043571472168, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870448112487793, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87043571472168, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870384216308594, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870439529418945, 14.870443344116211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870439529418945, 14.87044620513916, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.87043571472168, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870323181152344, 14.87044906616211, 14.870450019836426, 14.87043571472168, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870444297790527, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870438575744629, 14.87042236328125, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870433807373047, 14.870442390441895, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870444297790527, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.87043571472168, 14.87044906616211, 14.870443344116211, 14.870448112487793, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.87044620513916, 14.87044620513916, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870444297790527, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870399475097656, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870431900024414, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870428085327148, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870428085327148, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870440483093262, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.87044620513916, 14.870448112487793, 14.870447158813477, 14.870450973510742, 14.870399475097656, 14.87044906616211, 14.870448112487793, 14.870447158813477, 14.870382308959961, 14.87044906616211, 14.870450973510742, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870437622070312, 14.870450019836426, 14.87044906616211, 14.870428085327148, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870443344116211, 14.870445251464844, 14.870450019836426, 14.870417594909668, 14.870447158813477, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87043571472168, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870444297790527, 14.870447158813477, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870331764221191, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870445251464844, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87042236328125, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870428085327148, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870445251464844, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870401382446289, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870431900024414, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870445251464844, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870444297790527, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870439529418945, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870423316955566, 14.870450019836426, 14.87044620513916, 14.870426177978516, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870443344116211, 14.870442390441895, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870439529418945, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870426177978516, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870439529418945, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.870429992675781, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870448112487793, 14.870416641235352, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.8704252243042, 14.87044620513916, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87042236328125, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.870441436767578, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870426177978516, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870443344116211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870336532592773, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870442390441895, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.87044906616211, 14.870417594909668, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870444297790527, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870444297790527, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870414733886719, 14.870423316955566, 14.870437622070312, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870439529418945, 14.870442390441895, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.870444297790527, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870438575744629, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.870444297790527, 14.87044906616211, 14.87044620513916, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870447158813477, 14.8704252243042, 14.870450019836426, 14.87043285369873, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870409965515137, 14.87044906616211, 14.870443344116211, 14.87044620513916, 14.87044906616211, 14.870448112487793, 14.870440483093262, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870440483093262, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870428085327148, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870428085327148, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87043571472168, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87035846710205, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870429992675781, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.87039566040039, 14.870448112487793, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870382308959961, 14.87044906616211, 14.870439529418945, 14.870382308959961, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870439529418945, 14.870440483093262, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870441436767578, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870434761047363, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870447158813477, 14.870437622070312, 14.870450019836426, 14.870447158813477, 14.870437622070312, 14.870450019836426, 14.870441436767578, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.870428085327148, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870441436767578, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870420455932617, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870429039001465, 14.870450973510742, 14.870392799377441, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87043571472168, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.87044620513916, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.87044620513916, 14.87037467956543, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870424270629883, 14.87044620513916, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870375633239746, 14.870450019836426, 14.87044620513916, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870445251464844, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870380401611328, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870443344116211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870443344116211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870379447937012, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870437622070312, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870429039001465, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870444297790527, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870445251464844, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870443344116211, 14.87044906616211, 14.870440483093262, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870438575744629, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87042236328125, 14.87044906616211, 14.870445251464844, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870442390441895, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044620513916, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870441436767578, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870447158813477, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870434761047363, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870429992675781, 14.870450019836426, 14.87044906616211, 14.870441436767578, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870444297790527, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870444297790527, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870443344116211, 14.870450973510742, 14.870450973510742, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870431900024414, 14.870450019836426, 14.870426177978516, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870437622070312, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870442390441895, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870410919189453, 14.870450019836426, 14.870444297790527, 14.87044906616211, 14.870440483093262, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870429992675781, 14.870440483093262, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87042236328125, 14.870450019836426, 14.870450973510742, 14.870445251464844, 14.870450019836426, 14.870442390441895, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870414733886719, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870438575744629, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870441436767578, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870376586914062, 14.870447158813477, 14.870450019836426, 14.87043571472168, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.870447158813477, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.870420455932617, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870407104492188, 14.87044620513916, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870439529418945, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.870450973510742, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870447158813477, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.870437622070312, 14.870450973510742, 14.870445251464844, 14.870450019836426, 14.870380401611328, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870447158813477, 14.87044620513916, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870450973510742, 14.870448112487793, 14.870447158813477, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870428085327148, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.87044620513916, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870431900024414, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870439529418945, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870444297790527, 14.870447158813477, 14.870450019836426, 14.87044620513916, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870423316955566, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.870441436767578, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044620513916, 14.870447158813477, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870447158813477, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870428085327148, 14.870444297790527, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.87044620513916, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870440483093262, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870439529418945, 14.870443344116211, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870444297790527, 14.87044906616211, 14.87016487121582, 14.87044906616211, 14.870447158813477, 14.870443344116211, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870444297790527, 14.87043571472168, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870444297790527, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870440483093262, 14.870445251464844, 14.870429992675781, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870421409606934, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870444297790527, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870424270629883, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.87044620513916, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870428085327148, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870441436767578, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450973510742, 14.870450019836426, 14.870444297790527, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870400428771973, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870444297790527, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870439529418945, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870433807373047, 14.87044906616211, 14.870441436767578, 14.870450019836426, 14.870448112487793, 14.870356559753418, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870440483093262, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870441436767578, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87043571472168, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870448112487793, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.870445251464844, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870447158813477, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870445251464844, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870423316955566, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870442390441895, 14.87044906616211, 14.87044620513916, 14.87039566040039, 14.870447158813477, 14.870450019836426, 14.87044620513916, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870433807373047, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87043285369873, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870450973510742, 14.870447158813477, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870401382446289, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870440483093262, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870440483093262, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870445251464844, 14.870448112487793, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870448112487793, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870442390441895, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870444297790527, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870444297790527, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.87044906616211, 14.870443344116211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870444297790527, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870442390441895, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.870420455932617, 14.870450019836426, 14.870450019836426, 14.870440483093262, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870441436767578, 14.87044906616211, 14.870442390441895, 14.87044906616211, 14.870450019836426, 14.87043571472168, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870439529418945, 14.870443344116211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870441436767578, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870448112487793, 14.870447158813477, 14.870414733886719, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870424270629883, 14.87044906616211, 14.87044906616211, 14.870418548583984, 14.870448112487793, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044620513916, 14.87044620513916, 14.870441436767578, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870448112487793, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870444297790527, 14.870450019836426, 14.870447158813477, 14.870441436767578, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870445251464844, 14.870445251464844, 14.870444297790527, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044620513916, 14.870450973510742, 14.870444297790527, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870426177978516, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87043571472168, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870394706726074, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870437622070312, 14.87044620513916, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870444297790527, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870441436767578, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870439529418945, 14.870437622070312, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870442390441895, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870426177978516, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870404243469238, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.870439529418945, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870275497436523, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.8704252243042, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870441436767578, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870438575744629, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870439529418945, 14.870450973510742, 14.870437622070312, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870442390441895, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870444297790527, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870427131652832, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870431900024414, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870440483093262, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870445251464844, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870401382446289, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870450973510742, 14.870450019836426, 14.87044620513916, 14.87044620513916, 14.870353698730469, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870440483093262, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870407104492188, 14.870450019836426, 14.870450019836426, 14.870440483093262, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870441436767578, 14.87044906616211, 14.870441436767578, 14.870442390441895, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870448112487793, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870437622070312, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870418548583984, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870429992675781, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870439529418945, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870351791381836, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870441436767578, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870440483093262, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870438575744629, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870436668395996, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870450973510742, 14.870336532592773, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870448112487793, 14.870420455932617, 14.870450019836426, 14.870450973510742, 14.870444297790527, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870440483093262, 14.870450973510742, 14.870448112487793, 14.870439529418945, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870448112487793, 14.870441436767578, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870400428771973, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870430946350098, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870444297790527, 14.870450973510742, 14.87044620513916, 14.870450973510742, 14.870450019836426, 14.87044620513916, 14.870444297790527, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870445251464844, 14.870437622070312, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.87026309967041, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870428085327148, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870441436767578, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870426177978516, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870436668395996, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870438575744629, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870429039001465, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870447158813477, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870441436767578, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870426177978516, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870428085327148, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870437622070312, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870442390441895, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870447158813477, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870448112487793, 14.870448112487793, 14.870444297790527, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870426177978516, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870367050170898, 14.870450973510742, 14.870450019836426, 14.870444297790527, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044620513916, 14.87044620513916, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.870447158813477, 14.87043571472168, 14.870444297790527, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870441436767578, 14.870448112487793, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87043571472168, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870442390441895, 14.870450019836426, 14.870450019836426, 14.870388984680176, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870416641235352, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870441436767578, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870434761047363, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870418548583984, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870442390441895, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870434761047363, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870444297790527, 14.87044906616211, 14.870431900024414, 14.870442390441895, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870436668395996, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87043571472168, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870424270629883, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870444297790527, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870444297790527, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870443344116211, 14.870450973510742, 14.870450019836426, 14.870443344116211, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870421409606934, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870434761047363, 14.870438575744629, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870445251464844, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870450973510742, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.870443344116211, 14.870448112487793, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870442390441895, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870401382446289, 14.87044620513916, 14.87043571472168, 14.870448112487793, 14.870450019836426, 14.870406150817871, 14.870444297790527, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870440483093262, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870445251464844, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870445251464844, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870440483093262, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870431900024414, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870437622070312, 14.87044906616211, 14.870441436767578, 14.870438575744629, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.870444297790527, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87043571472168, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870414733886719, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870410919189453, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870444297790527, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.870450973510742, 14.870444297790527, 14.870450973510742, 14.870447158813477, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870429992675781, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870434761047363, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870429039001465, 14.87044906616211, 14.870408058166504, 14.87044906616211, 14.870450019836426, 14.870433807373047, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870442390441895, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870370864868164, 14.870450019836426, 14.870450019836426, 14.870441436767578, 14.87044906616211, 14.870439529418945, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870445251464844, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870437622070312, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044620513916, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870440483093262, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044620513916, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870443344116211, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870441436767578, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870433807373047, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870442390441895, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870441436767578, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044620513916, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.8704252243042, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870437622070312, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870440483093262, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870433807373047, 14.87044906616211, 14.87044906616211, 14.870439529418945, 14.87044906616211, 14.87043571472168, 14.87044906616211, 14.87042236328125, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870438575744629, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.870445251464844, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870441436767578, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870440483093262, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870434761047363, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87042236328125, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.87043571472168, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870443344116211, 14.870447158813477, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870433807373047, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.87044620513916, 14.870431900024414, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870441436767578, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870429992675781, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870409965515137, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87043571472168, 14.87044620513916, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870440483093262, 14.870450019836426, 14.870450019836426, 14.870444297790527, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870443344116211, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870441436767578, 14.87044906616211, 14.870439529418945, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870441436767578, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870437622070312, 14.870445251464844, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.87042236328125, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870439529418945, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870439529418945, 14.87044906616211, 14.870431900024414, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.8704252243042, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870440483093262, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870439529418945, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870436668395996, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870447158813477, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870448112487793, 14.87044620513916, 14.870450019836426, 14.870444297790527, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870327949523926, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870428085327148, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870307922363281, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044620513916, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870431900024414, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870441436767578, 14.870444297790527, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87043285369873, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870429039001465, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044620513916, 14.87044620513916, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870445251464844, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870443344116211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870443344116211, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870444297790527, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870444297790527, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.870433807373047, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.87040901184082, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870307922363281, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450973510742, 14.870448112487793, 14.870447158813477, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870444297790527, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870420455932617, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87043285369873, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870441436767578, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.870444297790527, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870367050170898, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870439529418945, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.870431900024414, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870427131652832, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870447158813477, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870444297790527, 14.87044906616211, 14.870441436767578, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870373725891113, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044620513916, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870444297790527, 14.870450019836426, 14.870448112487793, 14.870428085327148, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870448112487793, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870437622070312, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870421409606934, 14.870450019836426, 14.870443344116211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.870367050170898, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870440483093262, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.870443344116211, 14.870438575744629, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870433807373047, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.87044906616211, 14.87044620513916, 14.870414733886719, 14.870450019836426, 14.87044906616211, 14.870443344116211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870423316955566, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870448112487793, 14.870447158813477, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870405197143555, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870445251464844, 14.870443344116211, 14.87044906616211, 14.870444297790527, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870439529418945, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870440483093262, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870441436767578, 14.870431900024414, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.870448112487793, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870301246643066, 14.870447158813477, 14.870443344116211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870380401611328, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870444297790527, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870438575744629, 14.870440483093262, 14.87044906616211, 14.87044906616211, 14.87043571472168, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870439529418945, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870445251464844, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870447158813477, 14.870450973510742, 14.87044620513916, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870421409606934, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.870445251464844, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.87044620513916, 14.870439529418945, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.870439529418945, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870441436767578, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870444297790527, 14.870450019836426, 14.870447158813477, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870448112487793, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870448112487793, 14.870447158813477, 14.870443344116211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870444297790527, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870437622070312, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870429992675781, 14.87044906616211, 14.870439529418945, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870428085327148, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870444297790527, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450973510742, 14.870448112487793, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870443344116211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870437622070312, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870441436767578, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870448112487793, 14.870441436767578, 14.87044906616211, 14.870440483093262, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870427131652832, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870444297790527, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870380401611328, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870441436767578, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870448112487793, 14.87044620513916, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870437622070312, 14.870444297790527, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870431900024414, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870414733886719, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044620513916, 14.870448112487793, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870441436767578, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.870442390441895, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870405197143555, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870445251464844, 14.870450019836426, 14.870445251464844, 14.870450973510742, 14.87044906616211, 14.870342254638672, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044620513916, 14.870443344116211, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870444297790527, 14.87044906616211, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870443344116211, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870413780212402, 14.87044906616211, 14.870450973510742, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870441436767578, 14.870450019836426, 14.870450019836426, 14.87044620513916, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044620513916, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870437622070312, 14.870450019836426, 14.870450019836426, 14.870445251464844, 14.870444297790527, 14.870447158813477, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450973510742, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.870274543762207, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450973510742, 14.870447158813477, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211, 14.870450019836426, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870445251464844, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870447158813477, 14.870450019836426, 14.870447158813477, 14.87044906616211, 14.870443344116211, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870443344116211, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.870447158813477, 14.870448112487793, 14.870380401611328, 14.870445251464844, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.870447158813477, 14.87044906616211, 14.870450019836426, 14.870450019836426, 14.87044906616211, 14.87044620513916, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.870450019836426, 14.87044906616211, 14.87044906616211, 14.870450019836426, 14.87044906616211, 14.870450973510742, 14.870450019836426, 14.870448112487793, 14.870450973510742, 14.870450973510742, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.87044906616211, 14.870443344116211, 14.870448112487793, 14.870447158813477, 14.870450019836426, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.87044906616211, 14.870450019836426, 14.870450973510742, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870450019836426, 14.870448112487793, 14.87044906616211]
Actual: [tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([86.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1137.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([37.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([576.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([15.], dtype=torch.float64), tensor([1801.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([17.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([54.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([58.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([17.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([25.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([36.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([22.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([27.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([23.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([15.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([86.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([21.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([17.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([55.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([18.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([73.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([17.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([19.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([102.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([15.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([99.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8493.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([23.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([328.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([20.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([208.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([31.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([15.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([20.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([688.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([22.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([29.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([15.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([49914.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([15.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([35.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([49.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([17.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([21.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([30.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([15.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([23.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([38.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([104.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([54.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([21.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([27.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([15.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([20.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([116.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([43.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([679.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([44.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([124.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([26.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([17.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([50.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6470.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([58.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2312.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([42.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([90.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([31.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([40.], dtype=torch.float64), tensor([50.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([829.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4106.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7661.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([180.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([876.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([225.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([44.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([34.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([499.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([217.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([69.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([31705.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([20.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([157.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([17.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([19.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([23.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([22.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([696.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([17.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([22.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([30.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([58.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([50.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([60.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([20.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([24.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([18.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([355.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([21.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([27.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([205.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([25.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([18.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([19.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6907.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([80.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([17.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([372.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([92.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([21340.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([54.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([87.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([25.], dtype=torch.float64), tensor([24.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([278.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([29.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([29.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1214.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([68.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([22.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([18.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([220.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([281.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([114.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([32.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([158.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([727.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([155.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([47.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([42.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([24.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([222.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([57.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([28.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([23.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([392.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([32.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([15.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([38.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([15.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([97.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([55.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3807.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([15721.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([19.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4181.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([25.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([21.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([33.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([48.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([318.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([20.], dtype=torch.float64), tensor([15.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([86.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([23.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([25.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([25.], dtype=torch.float64), tensor([46650.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([20.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([23189.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([257.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([21.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([29.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([27.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([60.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([43.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([124.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([23.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([30.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([15.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([27.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([28.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([21.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([418.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([38.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([26.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([57.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1427.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([104.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([23.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([17.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([206.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([24.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([27.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([286.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([31.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([27.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([21.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([22.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([65.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([34399.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([31.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([31.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([23.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([37.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([97.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([129.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([642.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([15.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([21.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([21.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([21.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8925.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([17.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([19.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([20.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([77.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([978.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10747.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([42681.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6620.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([38.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([95.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([32.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([15.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2093.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([315.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([30.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([36.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([107.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([53.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([26.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([448.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1525.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([21.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([19.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([999.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([73.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([85.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([18.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([18.], dtype=torch.float64), tensor([19.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([17.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([46.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([591.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2092.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([54.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([36472.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([223.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([24.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([87.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([24.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([37.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([180.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([209.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([19.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([46.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([41.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([22.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3000.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([105.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([93.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([24.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([457.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([45.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([40.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([19.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2537.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([255.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([75.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([23.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([24.], dtype=torch.float64), tensor([798.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([34.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([70.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([606.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([44.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([15.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([54.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([18.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([253.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([116.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([137.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([19.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([30978.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([44.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([456.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([366.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([18.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([154.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([19.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([85.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([40.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([34.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([219.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([30.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([153.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([21.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([79.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([26.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([109.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([21.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([97.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([15.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([30.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([21.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([77.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([23.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([19256.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([27.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([17.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([21.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([19.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([40.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([32.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([25.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2764.], dtype=torch.float64), tensor([239.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1201.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([1766.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([179.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([17.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([90.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([73.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([22.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([59.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([30.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([41.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([23.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([117.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([18.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([40.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([71.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([104.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([206.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([25.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([34.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([29.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([417.], dtype=torch.float64), tensor([55.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([27.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([196.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([84.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([26.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([41.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([22.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([21.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([17.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([52.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([47.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([5708.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([19.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1850.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([30.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([17.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([18.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([55.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([37.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([24.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([19.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([15.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([75.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([22.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([369.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([87.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([140.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([42.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([68.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([62.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([20.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([96.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([23.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([126.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([610.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([35.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([24.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([17.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([253.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([21.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2322.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([20.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([38.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([15.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3123.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([19.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([79.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([45.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([18.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([436.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([18.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([721.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([15.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([17.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([167.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([19.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([366.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([226.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([70.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([30.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([121.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([22.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([394.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([111.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([37.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2075.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([417.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([77.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6011.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([20.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([19.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([22.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([28.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([34.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([42.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([186.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([97.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([46.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1059.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([38.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([150.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([20.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([57.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([47.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([67.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([22.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([35.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([24.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([108.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([29341.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([32.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([90.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([21.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([737.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([172.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([19.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([391.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([183.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([25.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([34.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([34.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([36.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([45.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([27.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([28.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([28.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([140.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([17.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([4560.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3675.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([15.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([51.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([151.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([421.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([18.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([930.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([30.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([34.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([29.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([34.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([48.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([30.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([15.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([15.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([42.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([28097.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([17.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([427.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([397.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([20.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([560.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([242.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([23.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3901.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([160.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1052.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([23.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([30.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([51.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([20.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([31213.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([35.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([263.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([18.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([55.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([15.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([31.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([21.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([70.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([40.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([23.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([24.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([126.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3698.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([17.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([190.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([50.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([60.], dtype=torch.float64), tensor([157.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([78.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([695.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([46.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([55.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([54.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([79.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([19.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([18.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([39.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([53.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([40.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([25.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([32.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([84.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([607.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([463.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([120.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([20.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([15.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([34.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([94.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([85.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([42.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([356.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([18.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([15.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([22.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([28.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([23.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6302.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([25.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([77.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([515.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([31.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([55.], dtype=torch.float64), tensor([32.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([29.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([80.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([15.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([58.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([20.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([18.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([20.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([143.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([22.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([155.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([58.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([23.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4555.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([219.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([177.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([64.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([17.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([17.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([15.], dtype=torch.float64), tensor([62.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([71.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([17.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([32.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([218.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([43.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([451.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([39.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([17.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([75.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([21.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([24.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([40.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([58.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([36.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([65.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([17.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([22.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([19.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([63.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([32.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([17.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([47.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([18.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([17.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([15.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([15.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([121.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([72.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([62.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([157.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([368.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2401.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([53.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([226.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([15.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([19.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([382.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([161.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([25.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([245.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([18.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([28.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2588.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2720.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([98.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([35.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([231.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5518.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2160.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([43.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([64.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([21.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([54.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([64.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([141.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([32.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([15.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([115.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([634.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1100.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([52.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([24.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([26.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([66.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([15.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([20.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([23.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1487.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([15.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([61.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([54.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([448.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([72.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([180.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([147.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([15.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([20.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([56.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1432.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([33.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([17.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([256.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([796.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([389.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([23216.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([17.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([18.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([18.], dtype=torch.float64), tensor([17.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([34.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2051.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1079.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([39.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([18.], dtype=torch.float64), tensor([1031.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([52.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1892.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([20.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([23.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([18.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([20.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([18.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([55.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([63.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([20.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([120.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([104.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([324.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([47.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2934.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([55.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1623.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([32.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([17.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([19.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([120.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([23.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([24.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([18.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([20.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([23.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([19.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([27.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([40.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([15.], dtype=torch.float64), tensor([32459.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([27.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([24.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([43.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([25.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([175.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([24.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([21.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([196.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([322.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([330.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([30.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([418.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([15.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([23.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([23.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([30.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([217.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([40.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([24.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([42.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([20.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([15.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([12497.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([19.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([19.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([466.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([27.], dtype=torch.float64), tensor([23.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([125.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([70.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([23.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([24.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([21.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([43.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([54.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([56.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([50.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([17.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([32.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7726.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([73.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([42.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([25.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([84.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1014.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([59.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([139.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([65.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([15.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([10703.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([16.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([73.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([50.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([35.], dtype=torch.float64), tensor([22.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([26.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([59.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([113.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([17.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([93.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([20.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([12.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([837.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([127.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([13.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([59.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([15.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([19.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1090.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([14.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([42.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([22.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([44768.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([9.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([49.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([22.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([18.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([17.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([590.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([62.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([50.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([11.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([6.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([10.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([8.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([4.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([7.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([2.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([1.], dtype=torch.float64), tensor([3.], dtype=torch.float64), tensor([0.], dtype=torch.float64), tensor([5.], dtype=torch.float64), tensor([1.], dtype=torch.float64)]
